version: 2.1

jobs:
  black:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run:
          name: Install Poetry & Dependencies
          command: |
            curl -sSL https://install.python-poetry.org | python -
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            poetry install
      - run:
          name: Run Black Check
          command: poetry run black  .

  flake8:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run:
          name: Install Poetry & Dependencies
          command: |
            curl -sSL https://install.python-poetry.org | python -
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            poetry install
      - run:
          name: Run Flake8 Check
          command: poetry run flake8 --count .

  mypy:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run:
          name: Install Poetry & Dependencies
          command: |
            curl -sSL https://install.python-poetry.org | python -
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            poetry install
      - run:
          name: Run Mypy Check
          command: poetry run mypy .

  pytest:
    docker:
      - image: circleci/python:3.9
      - image: postgres:13.6-bullseye
        environment:
          POSTGRES_PASSWORD: foodshareapp
          POSTGRES_USER: foodshareapp
          POSTGRES_DB: foodshareapp
    environment:
      FOODSHAREAPP_API_HOST: "0.0.0.0"
      FOODSHAREAPP_API_DB_HOST: "foodshareapp"
    steps:
      - checkout
      - run:
          name: Install Poetry & Dependencies
          command: |
            curl -sSL https://install.python-poetry.org | python -
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            poetry install
      - run:
          name: Run Pytest
          command: poetry run pytest -vv --cov="foodshareapp" .
    
  trigger_github_actions:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Trigger GitHub Actions for Issue Closure
          command: |
            curl -X POST -H "Accept: application/vnd.github.v3+json" \
                -H "Authorization: token $GITHUB_PAT" https://api.github.com/repos/alxxjohn/FoodShareApp/dispatches \
                -d '{"event_type":"circleci-pr-merged","client_payload":{"pull_request_number": "'"$CIRCLE_PULL_REQUEST"'"}}'


workflows:
  version: 2
  main_production_pipeline:
    jobs:
      - black
      - flake8
      - mypy
      - pytest
      - trigger_github_actions:
          requires:
            - pytest
            - black
            - flake8
            - mypy
          filters:
            branches:
              only:
                - main
